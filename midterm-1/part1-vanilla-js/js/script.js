
const form = document.querySelector("form");
const searchInput = document.querySelector("#search-input");
const resultsGrid = document.querySelector("#results-grid");

async function searchRecipes(keyword) {
  try {
    resultsGrid.innerHTML = "<p>Searching for recipes...</p>";

    const response = await fetch(
      `https://www.themealdb.com/api/json/v1/1/search.php?s=${keyword}`
    );

    if (!response.ok) {
      throw new Error("Network response was not ok");
    }

    const data = await response.json();

    displayRecipes(data.meals);
  } catch (error) {
    console.error("Error fetching data:", error);
    resultsGrid.innerHTML = "<p>An error occurred. Please try again later.</p>";
  }
}

function displayRecipes(meals) {
    const resultsGrid = document.getElementById('results-grid');
    
    if (!meals) {
        resultsGrid.innerHTML = '<p class="status-message">No recipes found.</p>';
        return;
    }
    
    resultsGrid.innerHTML = '';
    
    meals.forEach(meal => {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á meal card ‡∏û‡∏£‡πâ‡∏≠‡∏° data-meal-id
        const mealCard = document.createElement('div');
        mealCard.className = 'meal-card';
        mealCard.setAttribute('data-meal-id', meal.idMeal); // ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç!
        mealCard.style.cursor = 'pointer'; // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ
        
        mealCard.innerHTML = `
            <img src="${meal.strMealThumb}" alt="${meal.strMeal}">
            <h3>${meal.strMeal}</h3>
        `;
        
        resultsGrid.appendChild(mealCard);
    });
    
    console.log('‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:', meals.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
}

form.addEventListener("submit", (event) => {
  event.preventDefault(); 
  const keyword = searchInput.value.trim();
  if (keyword) {
    searchRecipes(keyword);
  }
});

// Global variables ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö DOM elements
let mealDetailsSection = null;
let resultsContainer = null;

// Function ‡πÄ‡∏û‡∏∑‡πà‡∏≠ initialize DOM elements
function initializeDOMElements() {
    mealDetailsSection = document.getElementById('meal-details-section');
    resultsContainer = document.getElementById('results-container');
    
    // Test ‡∏ß‡πà‡∏≤ elements ‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    console.log('Meal details section:', mealDetailsSection);
    console.log('Results container:', resultsContainer);
}

// Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
function showMealDetailsPage() {
    if (resultsContainer) resultsContainer.style.display = 'none';
    if (mealDetailsSection) mealDetailsSection.classList.remove('hidden');
    
    // Scroll to top
    window.scrollTo(0, 0);
}

// Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
function showSearchPage() {
    if (mealDetailsSection) mealDetailsSection.classList.add('hidden');
    if (resultsContainer) resultsContainer.style.display = 'block';
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ initialize ‡πÄ‡∏°‡∏∑‡πà‡∏≠ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener('DOMContentLoaded', initializeDOMElements);

// Event delegation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà meal cards
function setupMealCardClickHandlers() {
    const resultsGrid = document.getElementById('results-grid');
    
    resultsGrid.addEventListener('click', function(event) {
        console.log('‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà:', event.target);
        
        // ‡∏´‡∏≤ meal card ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
        const mealCard = event.target.closest('.meal-card');
        
        if (mealCard) {
            const mealId = mealCard.getAttribute('data-meal-id');
            console.log('‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà meal ID:', mealId);
            
            if (mealId) {
                // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                loadMealDetails(mealId);
            }
        }
    });
    
    console.log('‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö meal cards ‡πÅ‡∏•‡πâ‡∏ß');
}

function setupBackButtonHandler() {
    const backButton = document.getElementById('back-to-search-btn');
    
    if (backButton) {
        backButton.addEventListener('click', function() {
            console.log('‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö');
            showSearchPage();
        });
        
        console.log('‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
    }
}

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô initializeDOMElements
function initializeDOMElements() {
    mealDetailsSection = document.getElementById('meal-details-section');
    resultsContainer = document.getElementById('results-container');
    
    // ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á event handlers
    setupMealCardClickHandlers();
    setupBackButtonHandler();
    
    console.log('Initialize DOM elements ‡πÅ‡∏•‡∏∞ event handlers ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß');
}

// Placeholder function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡∏à‡∏∞‡∏ó‡∏≥‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏ï‡πà‡∏≠‡πÑ‡∏õ)
function loadMealDetails(mealId) {
    console.log('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö meal ID:', mealId);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)
    showMealDetailsPage();
    
    // ‡πÅ‡∏™‡∏î‡∏á loading state
    document.getElementById('details-loading').classList.remove('hidden');
    document.getElementById('meal-details-content').classList.add('hidden');
    document.getElementById('details-error').classList.add('hidden');
    
    // TODO: ‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠ 1.4
}

async function fetchMealDetails(mealId) {
    console.log('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ID:', mealId);
    
    const apiUrl = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`;
    console.log('API URL:', apiUrl);
    
    try {
        const response = await fetch(apiUrl);
        const data = await response.json();
        
        console.log('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:', data);
        
        if (data.meals && data.meals.length > 0) {
            return data.meals[0]; // return meal object
        } else {
            throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏´‡∏≤‡∏£');
        }
    } catch (error) {
        console.error('Error fetching meal details:', error);
        throw error;
    }
}

function processMealIngredients(meal) {
    const ingredients = [];
    
    // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡∏à‡∏≤‡∏Å strIngredient1-20 ‡πÅ‡∏•‡∏∞ strMeasure1-20
    for (let i = 1; i <= 20; i++) {
        const ingredient = meal[`strIngredient${i}`];
        const measure = meal[`strMeasure${i}`];
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (ingredient && ingredient.trim() !== '') {
            let ingredientText = '';
            
            if (measure && measure.trim() !== '') {
                ingredientText = `${measure.trim()} ${ingredient.trim()}`;
            } else {
                ingredientText = ingredient.trim();
            }
            
            ingredients.push(ingredientText);
        }
    }
    
    console.log('‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß:', ingredients);
    return ingredients;
}

function displayMealDetailsContent(meal) {
    console.log('‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á:', meal.strMeal);
    
    const contentDiv = document.getElementById('meal-details-content');
    const ingredients = processMealIngredients(meal);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    const detailsHTML = `
        <div class="meal-header">
            <div class="meal-image">
                <img src="${meal.strMealThumb}" alt="${meal.strMeal}">
            </div>
            <div class="meal-info">
                <h1>${meal.strMeal}</h1>
                <p><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> ${meal.strCategory || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
                <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®:</strong> ${meal.strArea || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
                ${meal.strTags ? `<p><strong>‡πÅ‡∏ó‡πá‡∏Å:</strong> ${meal.strTags}</p>` : ''}
            </div>
        </div>
        
        <div class="ingredients-section">
            <h2>ü•ò ‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°</h2>
            <ul class="ingredients-list">
                ${ingredients.map(ingredient => `<li>${ingredient}</li>`).join('')}
            </ul>
        </div>
        
        <div class="instructions-section">
            <h2>üë®‚Äçüç≥ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥</h2>
            <div class="instructions-text">${meal.strInstructions || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥'}</div>
        </div>
        
        ${meal.strYoutube ? `
            <div class="video-section">
                <h2>üì∫ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏≥</h2>
                <a href="${meal.strYoutube}" target="_blank" class="video-link">
                    ‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô YouTube
                </a>
            </div>
        ` : ''}
    `;
    
    contentDiv.innerHTML = detailsHTML;
}

async function loadMealDetails(mealId) {
    console.log('‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö meal ID:', mealId);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞ loading state
    showMealDetailsPage();
    
    const loadingDiv = document.getElementById('details-loading');
    const contentDiv = document.getElementById('meal-details-content');
    const errorDiv = document.getElementById('details-error');
    
    // ‡πÅ‡∏™‡∏î‡∏á loading, ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô
    loadingDiv.classList.remove('hidden');
    contentDiv.classList.add('hidden');
    errorDiv.classList.add('hidden');
    
    try {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
        const meal = await fetchMealDetails(mealId);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        displayMealDetailsContent(meal);
        
        // ‡∏ã‡πà‡∏≠‡∏ô loading, ‡πÅ‡∏™‡∏î‡∏á content
        loadingDiv.classList.add('hidden');
        contentDiv.classList.remove('hidden');
        
    } catch (error) {
        console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏î‡πâ:', error);
        
        // ‡πÅ‡∏™‡∏î‡∏á error message
        errorDiv.textContent = `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`;
        errorDiv.classList.remove('hidden');
        loadingDiv.classList.add('hidden');
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö (optional)
function testMealDetails() {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ Meal ID ‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    loadMealDetails('52772'); // Teriyaki Chicken Casserole
}

// ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ô console ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö: testMealDetails()